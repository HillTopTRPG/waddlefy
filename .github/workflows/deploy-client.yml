name: Deploy client

on:
  push:
    paths:
      - 'client/**'
  workflow_dispatch:

env:
  AWS_S3_BUCKET: ${{ github.ref == 'refs/heads/main' && secrets.AWS_S3_BUCKET || secrets.AWS_S3_BUCKET_DEV }}
  AWS_CLOUD_FRONT_DISTRIBUTION_ID: ${{ github.ref == 'refs/heads/main' && secrets.AWS_CLOUD_FRONT_DISTRIBUTION_ID || secrets.AWS_CLOUD_FRONT_DISTRIBUTION_ID_DEV }}

jobs:
  execute:
    name: Deploy client to ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./client/package-lock.json
      - name: npm install
        working-directory: ./client
        run: npm i --force
      - name: build
        working-directory: ./client
        run: npm run build
      - name: aws configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.MY_AWS_REGION }}
      - name: upload files to S3
        working-directory: ./client
        run: aws s3 cp --recursive dist/ s3://${{env.AWS_S3_BUCKET}}/ --exclude '.*git*'
      - name: cloud front cache clear
        run: aws cloudfront create-invalidation --distribution-id ${{env.AWS_CLOUD_FRONT_DISTRIBUTION_ID}} --paths "/*"
