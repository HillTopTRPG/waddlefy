AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Waddlefy AppSync Mutation deleteSession

Parameters:
  ProjectName:
    Type: String
  ApiId:
    Type: String
  PlayerTableName:
    Type: String
  SessionTableName:
    Type: String
  SessionDataTableName:
    Type: String
  DashboardTableName:
    Type: String

Resources:
  DeleteSessionMutationResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref ApiId
      TypeName: Mutation
      FieldName: deleteSession
      DataSourceName: !GetAtt DeleteSessionFunctionDataSource.Name
      RequestMappingTemplate: |
        {
          "version" : "2017-02-28",
          "operation": "Invoke",
          "payload": $util.toJson($ctx.args)
        }
      ResponseMappingTemplate: $util.toJson($context.result)

  DeleteSessionFunctionDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: DeleteSessionFunctionDataSource
      ApiId: !Ref ApiId
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt DeleteSessionFunction.Arn
      ServiceRoleArn: !GetAtt DeleteSessionFunctionInvokeRole.Arn

  DeleteSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../../lambda/nodejs
      Handler: delete-session.handler
      Tracing: Active
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      FunctionName: !Sub ${ProjectName}-delete-session
      Description: Waddlefy Lambda Delete Session
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PlayerTableName
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionTableName
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionDataTableName
        - DynamoDBCrudPolicy:
            TableName: !Ref DashboardTableName
      Environment:
        Variables:
          PLAYER_TABLE_NAME: !Ref PlayerTableName
          SESSION_TABLE_NAME: !Ref SessionTableName
          SESSION_DATA_TABLE_NAME: !Ref SessionDataTableName
          DASHBOARD_TABLE_NAME: !Ref DashboardTableName
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Format: esm
        External:
          - '@aws-sdk/client-dynamodb'
          - '@aws-sdk/lib-dynamodb'
        Minify: false
        Target: es2022
        OutExtension:
          - .js=.mjs
        EntryPoints:
          - delete-session.ts

  DeleteSessionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${DeleteSessionFunction}
      RetentionInDays: 3

  DeleteSessionFunctionInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AllowInvokeLambda
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:invokeFunction
                Resource: !GetAtt DeleteSessionFunction.Arn