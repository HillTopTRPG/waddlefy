AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Waddlefy Schema

Parameters:
  ProjectName:
    Type: String
  ServiceRoleArn:
    Type: String
  ApiId:
    Type: String
  UserTableName:
    Type: String
  SessionTableName:
    Type: String
  PlayerTableName:
    Type: String
  DashboardTableName:
    Type: String
  SessionDataTableName:
    Type: String

Resources:
  # DataSource
  UserTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: UserTableDataSource
      ApiId: !Ref ApiId
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !Ref ServiceRoleArn
      DynamoDBConfig:
        TableName: !Ref UserTableName
        AwsRegion: !Ref AWS::Region
  SessionTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: SessionTableDataSource
      ApiId: !Ref ApiId
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !Ref ServiceRoleArn
      DynamoDBConfig:
        TableName: !Ref SessionTableName
        AwsRegion: !Ref AWS::Region
  PlayerTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: PlayerTableDataSource
      ApiId: !Ref ApiId
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !Ref ServiceRoleArn
      DynamoDBConfig:
        TableName: !Ref PlayerTableName
        AwsRegion: !Ref AWS::Region
  DashboardTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: DashboardTableDataSource
      ApiId: !Ref ApiId
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !Ref ServiceRoleArn
      DynamoDBConfig:
        TableName: !Ref DashboardTableName
        AwsRegion: !Ref AWS::Region
  SessionDataTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: SessionDataTableDataSource
      ApiId: !Ref ApiId
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !Ref ServiceRoleArn
      DynamoDBConfig:
        TableName: !Ref SessionDataTableName
        AwsRegion: !Ref AWS::Region

  # Relations
  RelationsResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: relations.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        UserTableDataSourceName: !GetAtt UserTableDataSource.Name
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name
        DashboardTableDataSourceName: !GetAtt DashboardTableDataSource.Name
        SessionDataTableDataSourceName: !GetAtt SessionDataTableDataSource.Name

  # Functions
  FunctionsResolverStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: functions.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # query checkDuplicateUserId
  MutationCheckDuplicateUserIdStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: query/check-duplicate-user-id.yaml
      Parameters:
        ApiId: !Ref ApiId
        UserTableDataSourceName: !GetAtt UserTableDataSource.Name

  # mutation userSignUp
  MutationUserSignUpStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/user-sign-up.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        UserTableDataSourceName: !GetAtt UserTableDataSource.Name
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name

  # mutation userSignIn
  MutationUserSignInStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/user-sign-in.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        UserTableDataSourceName: !GetAtt UserTableDataSource.Name

  # mutation updateUserName
  MutationUpdateUserNameStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/update-user-name.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        UserTableDataSourceName: !GetAtt UserTableDataSource.Name

  # mutation updateUserIcon
  MutationUpdateUserIconStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/update-user-icon.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        UserTableDataSourceName: !GetAtt UserTableDataSource.Name

  # mutation addSession
  MutationAddSessionStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/add-session.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name

  # mutation addDashboard
  MutationAddDashboardStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/add-dashboard.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        DashboardTableDataSourceName: !GetAtt DashboardTableDataSource.Name

  # mutation addSessionData
  MutationAddSessionDataStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/add-session-data.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionDataTableDataSourceName: !GetAtt SessionDataTableDataSource.Name

  # mutation updateSession
  MutationUpdateSessionStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/update-session.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name

  # mutation updateDashboard
  MutationUpdateDashboardStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/update-dashboard.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        GetSessionInputFunctionId: !GetAtt FunctionsResolverStack.Outputs.GetSessionInputFunctionId
        DashboardTableDataSourceName: !GetAtt DashboardTableDataSource.Name

  # mutation updateSessionData
  MutationUpdateSessionDataStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/update-session-data.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionDataTableDataSourceName: !GetAtt SessionDataTableDataSource.Name

  # mutation deleteSession
  MutationDeleteSessionStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/delete-session.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name

  # mutation deleteDashboard
  MutationDeleteDashboardStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/delete-dashboard.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        GetSessionInputFunctionId: !GetAtt FunctionsResolverStack.Outputs.GetSessionInputFunctionId
        DashboardTableDataSourceName: !GetAtt DashboardTableDataSource.Name

  # mutation deleteSessionData
  MutationDeleteSessionDataStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/delete-session-data.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionDataTableDataSourceName: !GetAtt SessionDataTableDataSource.Name

  # mutation addPlayerByUser
  MutationAddPlayerByUserStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/add-player-by-user.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name
        CheckNoPlayerNameExistsFunctionId: !GetAtt FunctionsResolverStack.Outputs.CheckNoPlayerNameExistsFunctionId

  # mutation addPlayerByPlayer
  MutationPlayerSignUpStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/add-player-by-player.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name
        CheckNoPlayerNameExistsFunctionId: !GetAtt FunctionsResolverStack.Outputs.CheckNoPlayerNameExistsFunctionId

  # mutation playerFirstSignIn
  MutationPlayerFirstSignInStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/player-first-sign-in.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # mutation playerSignIn
  MutationPlayerSignInStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/player-sign-in.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # mutation generatePlayerResetCode
  MutationGeneratePlayerResetCodeStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/generate-player-reset-code.template.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        ApiId: !Ref ApiId
        PlayerTableName: !Ref PlayerTableName

  # mutation resetPlayerPassword
  MutationResetPlayerPasswordStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/reset-player-password.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # mutation updatePlayerName
  MutationUpdatePlayerNameStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/update-player-name.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # mutation updatePlayerIcon
  MutationUpdatePlayerIconStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/update-player-icon.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # mutation deletePlayer
  MutationDeletePlayerStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: mutation/delete-player.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # query directPlayerAccess
  QueryDirectPlayerAccess:
    Type: AWS::Serverless::Application
    Properties:
      Location: query/direct-player-access.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # query directSessionAccess
  QueryDirectSessionAccess:
    Type: AWS::Serverless::Application
    Properties:
      Location: query/direct-session-access.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        SessionTableDataSourceName: !GetAtt SessionTableDataSource.Name

  # query directDashboardAccess
  QueryDirectDashboardAccess:
    Type: AWS::Serverless::Application
    Properties:
      Location: query/direct-dashboard-access.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        DashboardTableDataSourceName: !GetAtt DashboardTableDataSource.Name

  # query getSessionPlayer
  QueryGetSessionPlayer:
    Type: AWS::Serverless::Application
    Properties:
      Location: query/get-session-player.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name

  # query getSessionPlayers
  QueryGetSessionPlayers:
    Type: AWS::Serverless::Application
    Properties:
      Location: query/get-session-players.template.yaml
      Parameters:
        ApiId: !Ref ApiId
        PlayerTableDataSourceName: !GetAtt PlayerTableDataSource.Name
